use clap::{Arg, Command, ArgMatches};

pub fn parse_args() -> ArgMatches {
    Command::new("rust-objdump")
        .version("0.1.0")
        .disable_help_flag(false) // 保留自动帮助 -h
        .arg(Arg::new("archive-headers")
            .short('a')
            .long("archive-headers")
            .help("显示归档头信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("file-headers")
            .short('f')
            .long("file-headers")
            .help("显示文件头信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("private-headers")
            .short('p')
            .long("private-headers")
            .help("显示目标格式专用头部")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("private")
            .short('P')
            .long("private")
            .help("显示目标格式专用内容")
            .num_args(1))
        .arg(Arg::new("section-headers")
            .long("section-headers")
            .help("显示段头信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("all-headers")
            .short('x')
            .long("all-headers")
            .help("显示所有头部")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("disassemble")
            .short('d')
            .long("disassemble")
            .help("反汇编可执行段内容")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("disassemble-all")
            .short('D')
            .long("disassemble-all")
            .help("反汇编所有段内容")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("disassemble-sym")
            .long("disassemble-sym")
            .help("仅反汇编指定符号")
            .num_args(1))
        .arg(Arg::new("source")
            .short('S')
            .long("source")
            .help("反汇编中夹带源代码")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("source-comment")
            .long("source-comment")
            .help("源代码行前缀")
            .num_args(1))
        .arg(Arg::new("full-contents")
            .short('s')
            .long("full-contents")
            .help("显示所有段内容")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("decompress")
            .short('Z')
            .long("decompress")
            .help("解压后显示段内容")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("debugging")
            .short('g')
            .long("debugging")
            .help("显示调试信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("debugging-tags")
            .short('e')
            .long("debugging-tags")
            .help("用ctags风格显示调试信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("stabs")
            .short('G')
            .long("stabs")
            .help("显示STABS信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("dwarf")
            .short('W')
            .long("dwarf")
            .help("显示DWARF信息")
            .num_args(1))
        .arg(Arg::new("process-links")
            .short('L')
            .long("process-links")
            .help("显示分离调试文件内容")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("ctf")
            .long("ctf")
            .help("显示CTF信息")
            .num_args(1))
        .arg(Arg::new("sframe")
            .long("sframe")
            .help("显示SFrame信息")
            .num_args(1))
        .arg(Arg::new("syms")
            .short('t')
            .long("syms")
            .help("显示符号表")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("dynamic-syms")
            .short('T')
            .long("dynamic-syms")
            .help("显示动态符号表")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("reloc")
            .short('r')
            .long("reloc")
            .help("显示重定位信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("dynamic-reloc")
            .short('R')
            .long("dynamic-reloc")
            .help("显示动态重定位信息")
            .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("info")
            .short('i')
            .long("info")
            .help("显示支持的格式和架构")
            .action(clap::ArgAction::SetTrue))
        //.arg(Arg::new("help")
        //    .short('H')
        //    .long("help")
        //    .help("显示帮助信息")
        //    .action(clap::ArgAction::SetTrue))
        .arg(Arg::new("input")
            .help("目标文件路径")
            .required(true)
            .index(1))
        .get_matches()
}
